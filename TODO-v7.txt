
Publishing:
  pnpm changeset publish --no-git-tag
  Angular beta repro:
  https://stackblitz.com/edit/github-sphfu1?file=package.json,src%2Findex.html


api: better way to ensure min slot width/height. right now we depend on theme!?
bug: in Chrome and Safari, scroll-syncing really getting out of alignment
Classic theme
  better contrast between week number gray and non-business hour gray
Monarch theme
  audit responsiveness
  audit dark modes
  list-view
    single-events in a day should vertically align with number
    (rethink how circle-number height is done)
  put x-padding on non-circled day numbers. tab-focusing looks bad right now
Zen theme
  fork from classic theme
Technic theme
  fork from classic theme
  port old event styles from Monarch theme (but gut continuation cropping)
  make event selected state be solid color (like apple calendar)
All themes
  xxSmall text too small (esp Year view)
  implement nice now-indicator
  floating week number, even if looks bad
    implement WeekNumberDisplayData.isCell
  do list-view
  do resource-timeline
Test stickyHeaderDates, apparently "makes this broken sometimes"
ClassName for license warning (benefits Monarch theme)
rename ViewData -> ViewDisplayData
Implement
  blockEventContent
  rowEventContent
  columnEventContent
  listItemEventContent
Themes with -top slotLabelInners should start slots at 11pm night before
  BUT, BUG: slotMinTime:'-01:00' gives weird results
Put dayPopover as child of BODY! --- do whatever is necessary (still use position:fixed?)
  because it's possible to have overflow:hidden on the calendar now (Monarch theme does it)
  for web components, attach to shadow-root
Kill fixedMirrorParent --- always use BODY
Reana needs to design the schematics for Popover
manual-test: cropping within scrollers?
  stickiness within works?
  now-indicators bleeding out in any scendario, expanding canvas?
later: ensure nowIndicator doesn't appear in print view
test: since making timegrid slotlable css changes,
  test horizontal scrolling
  test growRows
later: no more CJS
later: instead of "in*" names which could be confused with "is*" names, do something like this:
  insideViewGroup
  insidePopover
later: if third-party ui-libraries define their own tabs, ensure aria is correctly wired up somehow
later: when no toolbar items defined, navlinks go to wrong day view


ASAP
----

high-level todo:
  backport tailwind classic theme -> normal classic theme
    address bugs:
      bug: eventColor not working in resource-timeline-row-grouping.html
  backport to bootstrap5 theme
    also: needs to use bootstrap-icons
      i think i implemented this, but uses old iconClassNames map
      use glyphicons still. easier instructions for importing font stylesheet as opposed to svgs

project: shacdn
  instead of buttonElements hook, which would require users to inject correct aria-attributes,
    disabled-attribute, and click handler,
    Have Shadcn inject only classNames via `buttonVariants` (https://ui.shadcn.com/docs/components/button#primary)
    Button-groups are hard to do anyway.
    Realistically, best way to do a button-group and customize buttons is to have developer,
    build custom toolbar from scratch (using our soon-to-be-improved datesSet callback)
  JSON file
    example: https://www.kibo-ui.com/components/calendar
      npx shadcn@latest add https://www.kibo-ui.com/registry/calendar.json

project: ResizeObserver refactor
  ResourceTimeline height:auto
    premium/bundle/a11y-ci/resource-timeline-flat-height-auto.html
    Not exactly sure why fixed-scrollbar would cause this
    Comment-out all Scroller vertical watching,
      then toggle time-area footer fixed-scrollbar. toggles problem
  ResourceTimeline switching resourceTimelineDay -> resourceTimelineThreeDays
    premium/bundle/a11y-ci/resource-timeline-flat-height.html
    Happening when timeline-header height increases,
      needs to change height of data-grid header, thus data-grid body
  AFTER:
    HACK in tests with Calendar::updateSize calls in callback, ULTIMATELY UNDO THOSE
    Check https://codesandbox.io/p/sandbox/3vxvhg?file=%2Fsrc%2FApp.js
  AFTER check bugs:
    bug: scroll to bottom of resource-timegrid-hscroll.html, scrollers out of sync
    bug: a11y-ci/resource-timegrid-hscroll.html, filler on top header, when scrolled all the way right. is waaay too big
    bug: bottom filler isn't working in a11y-ci/resource-timeline-row-grouping.html

BUGs later:
  bug: resource-timeline doing multiple group columns. positioning broken (bundle/a11y-ci/resource-timeline-col-grouping.html)
    will require refactor of how resource-timeline "entities" IDs are created: createEntityId / getEntityKey
    automated-test: two nested group, across different parents, with same group value
  bug: resource-timeline print-view with multiple columns; broken positioning

after-beta todo:
  rethink isCompact/isSpacious. weird to have isSpacious:false on resourceLaneBottom... hard to reason
  bug: why when resourceGroupHeaderClass bg color removed, we don't see vertical column lines underneath?
  bugs with isMajor special border on slots
    doesn't work on resourceTimelineThreeDays/Week/Month (am I not configuring correctly)
    darker border is incorrectly on some vresource header cells
  classic-theme: buttons in dark-mode should have colors inverted: selected should be lighter than non-selected
  [rename] CustomContentGenerator -> ContentGenerator (and customGenerator)
  [rename?] is EventDisplayData the best name when there's interaction-like props like isSelected?
  accept objects for *Class inputs
  rename listDaySideFormat -> listDayAltFormat ?
    (because theme might not decide to put it on the "side")
    maybe not "alt" because ppl might think related to alt-text
    TODO: give isAlt/isSide as a prop to the classname-generator
  ensure isMajor on resourceDayHeaders... this matters!
    depends on resource-above-dates or opposites
    HAVE THEMES leverage this. darker line
  ensure no-margin, no-padding on certain elements
    ensure not used when not supposed to!
  update manual theme tests for `icons` removal
    search for `icons: {`
  weird how expander is valigned differently than resource-area header/cell content
  audit all justify/align in theme. ensure axis is intuitive
  DRY up function utils in MorePopover
  rename isHeader -> inHeader (or just do "is" for everything)
  make a "cn" public utility
  dont allow margins on dayHeaderInnerClass or any class really!
  should vresource headers be sticky! yes! not the case in resourceTimeGridWeek
    for both cases of datesAboveHeaders
    maybe even do centering trick we do for slot labels!?
  nice way of doing shadow when scroll-down?
  i don't like how we need to do transparent border for non-divider when isHeader
    solution: put it IN the scroller (sibling of the canvas),
    also, this way we can do a nowIndicator DOT above it within the scroller
bug:
  bug: resourceTimelineDay totally misalligned (with 3 resources)
bug: when displayEventTime:false,
  list-item events with "All-day" remain (always like this?)
bug: for default titleFormat in week view
  why are we getting "Jan 2023 â€“ Feb 2023"? Problem with our ponyfill?
bug: why targeting single-day view doesnt work?
  views: { day: { dayHeaderFormat: { day: 'numeric', weekday: 'long' } } }
  ^^works but only for some settings
Monarch theme: bug: left-align dayheader for day-only views after views.day options bug above is fixed
  later: fix Screenshots/multimonth-more-link-bug.png
  core: kill border-radius and drop-shadow on (Calendar|View) when borderless
    OR, have root-div (and view-div? else?) explicitly handle this
  bug: Causes scrollbars when there shouldn't be
    slotDuration: '01:00',
    expandRows: true,


Changelog
---------

Note that scrollgrid will be removed in v7
Accept falsy className inputs. will remove
breaking: column hooks, instead of groupValue/text, uses fieldValue
breaking: resourceAreaHeaderClassNames apply to normal col-headers now too
breaking: dayLane* separated from dayCell*
breaking: dayCellContent (now called dayCellTopContent) no longer injected into daypopover
breaking: dayCellClassNames/DidMount/WillUnmount no longer called on daypopover
changelog: new EventContentArg props
breaking: timelineheader would previously use fc-day- instead of fc-slot- if rowUnit was >time
  now, uses fc-slot- no matter what (for classic theme)
changelog: new toolbar-button-display setting? (icons-before-text whatever)
breaking: ViewSpec's buttonText is gone... for people declaring custom views
changelog: feature: to disable "List" buttons while returning i18n, set listText:false
changelog: dropped Bootstrap 4
changelog: shape of a locale
changelog: classic-theme visually capitalizes button name strings, like "Today" versus old "today"
changelog: eventShortHeight -> eventCompactHeight
changelog: EventContentArg `level`
changelog: remove luxon1/2
changelog:
  dayCellContent/etc prop `dayNumberText` renamed to just `text`
  textParts added to:
    dayHeaderContent
    dayCellTopContent
    weekNumberContent
    listDayHeaderContent
changelog: Vue3 path to global.js changed from index.global.js
changelog: how importmap (ex: importmap.html) must reference */esm/* files
changelog: removed web-component 'shadow' setting
changelog: event hooks' .isDragging/isResizing might be subtly different for mirror or regular
  TODO: figure out how
breaking: single-row dayGrid (like dayGridWeek) no longer shows week numbers
changelog: do "isMajor/isMinor API additions"
changelog: buttonDisplay (and buttons.display)
changelog: hints
  xxx buttonHints -> prevHint, nextHint, todayHint,
  xxx timeHint (aria is done differently now, as list)
  args --- prevHint(unitText, unit) -- gets unitText via yearText, monthText, weekText, dayText
  args --- nextHint(unitText, unit) -- "
  args --- todayHint(unitText, unit) -- "
  args --- viewHint(unitText, unit) -- "
  (second arg is new!)
bugfix: date given to week-number hooks was never zoned
changelog: list-event time "column" is hardcoded as 165px width
note: for tailwind themes, don't use JS colorScheme setting, just use dark: classname prefixes
  and configure your darkmode manually: https://tailwindcss.com/docs/dark-mode#toggling-dark-mode-manually
changelog: transforms on event bg(colors) via CSS filters
changelog: Event::toPlainObject doesn't accept collapseColor anymore
  now returns { color, contrastColor }
changelog: +Event::color, +Event::contrastColor, -Event::backgroundColor, -Event::textColor, -Event::borderColor
  (same for Resource)
changelog: eventColor (different behavior), +eventContrastColor, -eventBackgroundColor, -eventBorderColor, -eventTextColor
  gotcha: in order to use eventContrastColor, you MUST define eventColor. same for event object
changelog: --fc-event-color, --fc-event-contrast-color, --fc-canvas-color
changelog: borderless(X) also indents toolbar
changelog: dayCellTop will be rendered even if no day-cell-text. check hasLabel/hasMonthLabel
changelog: premium-warning styled in dark mode
  https://github.com/fullcalendar/fullcalendar/issues/7904
changelog: is root className/class a new feature!? i think so
changelog: fieldValue. what was old API?
changelog: resourceContent / ResourceContentArg removed? no global "resource" renderer anymore
changelog: TYPE renames:
  MountArg -> MountData
  EventContentArg -> EventDisplayData
  EventMountArg -> EventMountData
  WeekNumberContentArg -> WeekNumberDisplayData
  WeekNumberMountArg -> WeekNumberMountData
  AllDayContentArg -> AllDayHeaderData
  AllDayMountArg -> AllDayHeaderMountData
  ButtonContentArg -> ButtonData
  ButtonMountArg -> ButtonMountData
  *ContentArg -> *Data
  *MountArg -> *MountData
  *Arg -> *Data (like EventClickArg -> EventClickData)
  we DO NOT rename LocaleArg
  (search only the old .d.ts files!)
changelog: instead of accepting classNames, these please accept both className/class:
  root calendar
  view-specific options to define custom view
  ButtonInput
  Event input
  EventSource input
changelog: querying className now returns a non-normalized ORIGINAL value:
  Event::className (previously classNames <-- KILLED)
  Resource::eventClass (previously eventClassNames <-- KILLED)
changelog: Event::toPlainObject/toJSON returns a 'className' string instead of 'classNames' array
changelog: dayLaneInnerClass arg.isSimple means whether it's simple PRINT-view for firefox
changelog: improved responsiveness when really narrow... font size adjusts
changelog: big styling change... separate element for by event
changelog: for porting custom themes, recomment ppl start with the "modern" theme
changelog: backgroundEventColor
changelog: week/multi-day views in timegrid/daygrid will have "Sun 8" header by default,
  instead of "Sun 8/5" header (no more month number. just day-of-month)
changelog:
  custom-content hooks about lanes (not sure their previous name)
    were REMOVED:
      resourceLaneContent/InnerClass
      slotLaneContent/InnerClass
      dayLaneContent (dayLaneInnerClass is actually useful. something else)
changelog: weekdayJustify, forceCommas
changelog: default computed titleFormat for week view (could span different months),
  WHEN it actually does span different months, is like "Sep - Oct 2014"
changelog: dayHeaderClass/etc is used within popover (inPopover)

Docs
----

make note in component anatomy that disabled slots/daycells/daylanes need to be specifically handled
we will not be implementing "easier way to inject default eventContent"
  https://github.com/fullcalendar/fullcalendar/issues/5927
  I was hoping to use eventElement to affect outer rendering, but complications about any new
  provided top-level event div not having correct aria-roles and flex-css.
  In reality, tooltip libs like these..
  - https://mui.com/material-ui/react-tooltip/
  - https://chakra-ui.com/docs/components/tooltip
  ..don't create a wrapper div, they just somehow mark the provided top level element(s) with
  handlers and aria attributes, and the revealed tooltip is rooted somewhere else in the DOM.
  So, an inner-wrapper is okay, assuming dev is okay not having tooltip on outer 1px border
  (or they can inject a flex-grow wrapper)
  SOLUTION to accessing default content:
  Tell people they can just recreate the very simple markup from StandardEvent's renderInnerContent
    (remind them background events have different markup. simpler. converge them?)
previous docs said button.click would receive second argument as HTMLElement, but doesn't seem so
update examples in web-component README
talk about updateSize doesn't needed because of ResizeObserver
recommendation to CSS authors:
  don't use nesting
Rename all "arg"-like parameters in the docs:
  Info:
  Content:
  arg:
  Arg:
  arg)
  Arg)
Getting VSCode TailwindCSS Intellisense working with FullCalendar's theming classNames:
  "tailwindCSS.classAttributes": [
    ".*Class"
  ]
Background events don't respect contrast color
  because the color is made transparent, it's essentially considered the canvas color
  but themes can override by forcing text-color for backgroundEventTitleClass

Release Prep
------------

New linting system
Ensure `private` on all private class members
Ensure built types don't leak internal structures
Tame all scratch example files
Remove outdated .changeset transactions
Ensure outputted CSS doesn't have multiple :root declarations because of how we shifted vars.css around
Revert "hacks to get print-mode working, but some should be reverted"
Revert temporary gitignores
Audit all dependency workspace: protocols
complete package.json for classic-theme
Create aXe scrollbar workaround
Rerun aXe tests
hire designer for schematics
somehow publish classic tailwind theme?
adjust transpilation settings. es2016 okay now, with null coalescing operator?
ensure all new settings are put on the Angular connector!
test print-view extensively after theme refactor
test all horizontally-scrolling views
test z-index of events and more-link ABOVE background events in ALL VIEWs

After Launch
------------

importmap.public.html needs to be updated. accesses published files

Automated Test TODO
-------------------

automated-tests: do "isMajor/isMinor API additions"
how an event can render as a/div/div[role=button]
weird list-view slicing logic we removed
  https://github.com/fullcalendar/fullcalendar/blob/9a0edaeb5eddf2cec8bd2409ecc26c4598b98a48/packages/list/src/ListView.tsx#L235-L249
resource-timeline rowgrouping
  has correct borders on bottom of rows, even when all row groups collapsed
  when expandRows: true, groups do not expand, only resources!
timeline/hscroll-timeGRID, when sticky-header
  ensure time-axis or resource area has bottom filler to match horizontal scrollbar
resource-timeline group cells (that run vertically) have correct border, especially 2nd and 3rd down
positioning of sticky headers in all views. list view sticky subheaders too
resource-timeline indent works
pixel # for height/contentHeight works
correct header row heights for multi-header resource-TIMEgrid row with horizontal scrolling
when nowIndicator is OFF, doesn't render in DOM at all
percentage-based resource-timeline spreadsheet-column resizing
that expandRows works enabled/disabled for timegrid/resource-timeline views
test datagrid with h scroll, but timeline area WITHOUT h scroll
multiple tiers of headers line-up across scrollers
  timegrid h-scroll. with and without weekNumber
  resource-timeline. w/ datagrid/timeline headers: 1/2, 2/1
disabled days
  do NOT render navlinks (header or obviously day number)
  the headers WILL render data-date, fc-day-disabled (but not dayofweek, past, future classNames)
audit all past a11y bugs that aren't picked up by audit tool
  such as https://github.com/fullcalendar/fullcalendar/issues/7566
  "The div and span elements have an implicit role of generic and cannot be named unless they have a role attribute."
aria-current='date' on today
no empty header cells
  https://github.com/fullcalendar/fullcalendar/issues/2536#issuecomment-703825166
[v7-beta] Day cells do not expand to fit events in dayGridYear
  https://github.com/fullcalendar/fullcalendar/issues/7852
[resource-timeline] timeline-lane-footer has padding when eventOverlap:true, no padding when false
[timeline-no-resources] always has timeline-lane-footer, especially for when zero events and height:auto
timeline-event-rendering.ts, disabled test because flawed
  about zoom and event aligning w/ start and end
Perf: not rerendinering events that didn't change
  https://github.com/fullcalendar/fullcalendar/issues/3003
TimeGrid scrollTime:0 initially scrolls to 0 (a solved regression)
Tests for auto-scroll (not necessarily v7)
automated-test: button click handler can cancel default
automated-test: button hint arguments of all kinds
automated-test: write tests with moment/luxon textParts
cleanup responive.html demos since flex-wrap in toolbar became the default
automated-tests: ensure both className+class for "instead of accepting classNames" items above
in timeline, eventOverlap:true should cause chunkier events (in classic theme at least)

Freshdesk/GH-issues
-------------------

confusion over event color and text-color:
  list-item unintuitive (not really addressed):
    https://github.com/fullcalendar/fullcalendar/issues/6966
    https://github.com/fullcalendar/fullcalendar/issues/7694
  background events (can add to theme bg events via text-(--fc-event-contrast-color)):
    https://github.com/fullcalendar/fullcalendar/issues/5528
Fixed this issue of mousedown taking long time to recalculate style?
  https://fullcalendar.freshdesk.com/a/tickets/9078
  Can see forced-reflow warning here too: bundle/examples-v7/issue-7677.html
Make tickets for a new view with list-view underneath month calendar
Check ticket for daygrid view with "dots"
Need to split this issue
  https://github.com/fullcalendar/fullcalendar/issues/1037
  1. scrollreset (already implemented)
  2. scroll to current date or time
when infinite scroll-loading done
  https://fullcalendar.freshdesk.com/a/tickets/9668
when virtual rendering done
  https://fullcalendar.freshdesk.com/a/tickets/8496
  https://fullcalendar.freshdesk.com/a/tickets/9701
make ticket where +more popover is responsive? (takes up whole phone screen)
file bug for strange dragging events from timeline more-link (preexists)
timeline event dragging loses duration:
  1. have +more link with eventMaxStack
  2. open link, begin to drag event
  3. event looses it's duration. inconsistent with how normal event dragging happens
  (will be breaking change? maybe file ticket and add changelog)
  PREEXISTS: https://codepen.io/arshaw/pen/jOgeGwm?editors=0010
file preexisting v6 bug:
  non-singular view duration unit has weird hints on buttons "This ", "Next ", "Previous "
  https://codepen.io/arshaw/pen/yyBpopg?editors=0010
TimeGrid
  Known visual regression with event positioning
    After implementing restored v4 timegrid event spacing (https://github.com/fullcalendar/fullcalendar/issues/6569),
    Events squish too much:
      v4: https://codepen.io/arshaw/pen/pvzLNKr?editors=001 (BAD)
      v5: https://codepen.io/arshaw/pen/YPKapao?editors=0010 (GOOD)
      v6: https://codepen.io/arshaw/pen/NPKYbYb?editors=0010 (GOOD)
      v7: https://codepen.io/arshaw/pen/wBwJmgg?editors=001 (BAD)
responsive tickets (so ppl know we don't consider responsiveness "solved"):
  tiled multimonth view, JUST have event dots, nothing else
  timegrid week view, but with ONLY one day column. has multiple day headers for selecting other days tho
Create GH ticket for reviving weekNumber column (weekNumberDisplay: 'column')

Punt
----

General Markup
  in future css className refactor:
    fc-dayGridMonth -> fc-daygridmonth (to match fc-daygrid)
    fc-dayGridMonth-button -> fc-daygridmonth-button
    fc-timeline-now-indicator-arrow -> fc-timeline-nowindicator-arrow
    fc-timeline-more-link -> fc-timeline-morelink
    NEVERMIND. we've developed a strong precedent of dash-breaking-words,
      like week-number/day-number which needs to be both subcomponent (fc-daygrid-day>fc-daygrid-day-number)
      and independent component (fc-daygrid-week-number)
  Drop-shadow under sticky header, timeline headers
General Responsive
  Hide event times (daygrid/timeline) if too small?
  should fc-padding-* classes be responsive, meaning related to font-size?
    for fc-daygrid-day-number/fc-daygrid-week-number too
General Performance
  use css translateX/Y instead of top/left to prevent reflows
  user IntersectionObserver for DnD?
  when there's no ref watching a dimension, don't attach resize observer to element
    example: simple Month-view always listens to header heights (innerHeightRef) because TimeGrid
    needs to sync height with all-day cell
  TEST AFTER RELEASE - dayClick slow
    https://github.com/fullcalendar/fullcalendar/issues/6199 (dateClick)
    V6 repro: https://codepen.io/arshaw/pen/OJKMLRR?editors=0010
    V7 has no real improvement
General a11y
  Week numbers should be tabbable
  have separate settings for date-format hints? out of whack
    view's aria-label (if no headerToolbar) is "Sep 7 â€“ 8, 2020" (bad that it's abbreviated)
    week-view's column headers have hint "September 7, 2020" which don't include day of week (like real text "Mon 9/7")
  change <button> to role=button for fewer css reset collision?
  "Note: The aria-rowindex must be added to each row, but is optional on the cells, except for cells that span rows: the aria-rowindex attribute is required on all spanning cells."
    https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-rowindex
DayGrid
  prevent DayGridCell headers from overflowing? makes really small calendars look better
  [structure] simplify event positioning
    normalize each event-container's top by applying margin-top on ones that have smaller headers
    position each event-harness with a margin-top (in combo with existing abs positioning)
    after this^, we'll know the explicit min-height a row should be
      TODO: use this to explicitly set min-height on row div, this will override the not-smart
      "default" that the browser decides. then, force min-height:0 for all flex items (same with min-width),
      to be more like react-native, and more intuitive
Resource Timeline
  [structure] when no groupcols, do simplified DOM structure?
  get grouping via row and col simultaneously working. should be possible.
    see timeline-row-n-col-grouping-not-working.html
Angular
  Building example project gives warnings like
    Ignoring this import because ".." was marked as having no side effects
TimeGrid
  when date-selecting with mirror event, why are we rendering highlight?
  for timeline event-dnd, the mirror, should have white glow just like timegrid for when overlap other events
    https://codepen.io/arshaw/pen/jOgeGwm?editors=0010
Timeline
  for timeline event-dnd, the mirror, should have white glow just like timegrid for when overlap other events
MultiMonth
  put navlink on multimonth month header text?
  For print, force +morelink to isCompact=true
    Starting out NOT compact in forced 2-col formation, but when gets squished to where isCompact
    is needed, but ResizeObserver/etc doesn't adapt. examples-v7/multimonth-view.html
Cross-browser
  Firefox
    [bug][regression]: after print-view (for timegrid as least) scroll gutter filler permanently disappears
      does not happen when rigging up "P" keystroke
    Re-address borderBoxSize HACK
    resource-timeline header borders a little messed up
  Chrome
    [bug] with timeline sticky multi-tier date text
      premium/bundle/examples/timeline-sticky-header.html
      1. Click 3-day view
      2. Resize resource area
      3. "Sat 1/7" flickers and changes position
Example Projects
  In each two-column layout, give the sidebar flex-shrink:0 and the main min-width:0
    Things are currently collapsing very strangely on a narrow screen (like stackblitz angular demo)
punt: calendar-wide resourceColumnHeader* hooks should receive column definition
punt: audit all *Content hooks that accept `text` argument
  we like this pattern
  text is computed from translation or Intl
punt: bug: why does display:background not work on a 'Repeating Event'
  because it's a timed event. todo: document this better?
punt: decision: change direction -> dir everywhere?
punt: decision: buttons{}.click -> .handleClick ?
punt: kill all role=rowgroup ... a11y says it's optional. makes code confusing
punt: make setting where week number can be a column. how does this affect theming?
punt: [existing bug] eventMaxStack:1 is pretty dumb for two events:
  just displays the second event as a +more link, not saving space!!!
punt: timegrid all-day background events are displayed in both all-day and timed
  if there's a title, shows twice. doesn't look good
punt: create singleMonthTitleContent and give textParts to it?
punt: rename text->dateText and textParts->dateParts?
punt: workaround "dual-package hazard"? see the recommendation in temporal polyfill repo
punt: try to kill noEventsInnerClassNames in future. for vertically-centering "no events" text
punt: Should we still have data-date attributes on elements?
punt: don't use <Scroller> when not necessary
  ListView
  MultiMonth
punt: have theme define col-resizer (both for resource-area columns and whole area)
punt: our daygrid event-resizing get sloppier in some recent versions.
  previously, you'd drag over half-a-cell to trigger +1day. Now, it happens as soon as there's pixel overlap
punt: test dark mode that turns into print
punt: rename "mirror"?
punt: sticky list-view header, scrolldown accumulates double border
punt: way to put nonBusinessHours on Sun+Sat header (awkward to do with abs fill like dayLane)
punt(existing-quirk): when timegrid events are overlapping, and touch-dragging initiated on one,
  (aka "selecting" it), when at mouseup rest, event can still be underneath other events
  solution: make sure above all other events if selected
punt: daygrid cells' event h-positioning (uses percentage) conflicts with flexbox, doesn't quite match up
punt: move cell border to flex-end
  better for infinite horiztonal scroll later
  rows have it on bottom because better for print, breaking to second page
  ACTUALLY NOOO... the isMajor darker border depends on border at flex-start
punt: instead of position:relative/absolute an z-index:0,
  use isolation:isolate (well supported)
punt: in toolbars, remove left/right keys. force start/end keys (then add to changelog)
punt: rethink: isCompact vs isNarrow -- confusion for timegrid events
punt: sticky header in vertical resource view, horizontal scrolling. new feature
  do in CORE, not in theme. analagous to vertically-sticky resource cells
  if it were the theme, we'd need to pass a renderProp, and hard to know what the name would be
punt: slotMinHeight setting
punt: when implementing weekNumberDisplay:'column',
  will have WeekNumberDisplayData.isCell
  and weekNumberHeaderClass/Content

Notes
-----

isMajor/isMinor API additions:
  isMajor
    + slotLane
    + slotLabel
    + dayLane
    + dayHeader
    + dayCell
  isMinor
    + slotLane
    + slotLabel
we really do care about minimizing ResizeObserver loops, prevents flicker. so, safari is valuable
flexbox row expansion works across scroll regions: https://codepen.io/arshaw/pen/rNXdrLm?editors=1100
100% width within scroller applies to clientWidth only: https://codepen.io/arshaw/pen/GgKWRNZ?editors=1100
Print
  if you hit the debugging 'p' to force print-mode too soon after you stop scrolling,
    scrollEnd won't have enough time to fire and scroll state likely won't be saved,
    resulting in jump when entering print-mode. however, this isn't a realistic scenario because
    usually users have a long time between when they stop scrolling and when they initiate printing
  translateX/Y doesn't work when sticky items inside
  siblings must all be absolutely positioned if they are supposed to overlap
    and if you want them to span to subsequent pages in-sync
  Firefox:
    sometimes you just need to restart Firefox and things start working :(
    setting a bottom coordinate will NEVER wrap to subsequent pages
      problems with height:100% as well. hardcoded height needed
    weird issue: if abs positioned element starts on 2nd page and spans to third,
      makes a strange gap on 3rd page and pushes all content afterwards down
    if there's any sort of overflow:hidden/scroll container,
      screws up absolute positioning within, when spanning to subsequent pages. must disable
    JUST GIVE UP on multi-page absolutely positioned items in firefox
  bugzilla flexbox issues
    master ticket (pending): https://bugzilla.mozilla.org/show_bug.cgi?id=939897
    special-case fix (done): https://bugzilla.mozilla.org/show_bug.cgi?id=939897
      supposedly milestone 78.0a1
  bug with flexbox AND absolute positioning wrapping to subsequent pages (our discovery)
    ("Dinner" isn't showing up; starts on second page)
    (NEED TO LOOK AT ACTUAL PDF - differs from print preview sometimes)
      Firefox 120 - perfect
      Firefox 110 - good (event y off by 1px)
      Firefox 100 - good (event y off by 1px)
      Firefox 97 - good (event y off by 1px) --- February 8, 2022
      Firefox 96 - bad
      Firefox 95 - bad
      Firefox 90 - bad
  known-bugs:
    On Safari, table headers are not repeated for any view (browser bug)
a11y tree considerations
  aria-controls on resource-timeline parent-toggler
    is difficult because a parent row could control MANY child rows, and we don't have wrappers for
    those children, so aria-controls would need to be a huge dynamic list of tokens
  additional aria
    aria-level (depth)
    aria-posinset (index in current set)
    aria-setsize (current set size, not child size)
    ***I wanted to do this, but if rows out of order (because of virtualization),
      then no way to establish parent/child relationships
Why we need to use a <Ruler> to measure dimensions
  ResizeObserver does NOT synchronously handle dimension changes to self or ancestors while
  handling current element's dimensions. Will give a "ResizeObserver loop completed with undelivered notifications"
  error. Quintessential example is implementing an aspect-ratio element, which sets height of self after reading
  width of self. <Ruler> detangles dimension relationships and is very portable.
"invalid" dates aka "disabled" dates
  DayGridMONTH: https://codepen.io/arshaw/pen/EaYXWPM?editors=0010
    normal weekday header
    empty cells
  DayGridWEEK: https://codepen.io/arshaw/pen/mybwWEE?editors=0010
    empty header --> change to rendered headers!
    empty cells
  TimeGrid: https://codepen.io/arshaw/pen/pvzweyV?editors=001
    empty header --> change to rendered headers!
    empty cells
  Timeline: https://codepen.io/arshaw/pen/WbeOpwX?editors=0010 (must scroll left after load)
    normal header
    empty cell
How to do liquid-width/height, multiple technique
  Classic performant technique (currently used):
    FIXED-AREAS: nothing
    LIQUID-AREAS: { flex-grow:1, min-height:0, flex-basis:0 }
    Needed for horizontal equal-width cell expansion; basis0 is important
  Experimental:
    FIXED-AREAS: { flex-shrink:0 }
    LIQUID-AREAS: { flex-grow:1, min-height:0 }
    Good for layouts that are conditionally liquid-height
    Tho probably not as performant because need to compute the pre-squished AND post-squished layouts
note: bg-fill / bg-event background event z-indexes
  when border-color appears adjacent to bg-fill, looks muddy. either make slats semi-transparent,
    or make bg-fills semi-transparent
  we CAN'T make the border semi-transparent, because would appear darker at vertices where slats
    and lanes overlap
  we SHOULDN'T put resource-timeline bg-fills below the slats, because would require two canvas
    during infinite scroll
  SO, bg-fill must be ABOVE borders, below fg-events and day numbers
  this is will be challenging for dayGrid in react-native,
    since react-native is simplified rules for z-index -- only DOM siblings can be stacking siblings
    the solution will be to have individual bg-fills per-cell, which we might sortof need to do
    for a11y anyway (and we can just visually hide the bg-event title on subsequent days)
  for timegrid, (and eventually daygrid if we move to above^^ technique),
    we need the bg-fill to overlap the cell/lane's border
    right now, in timegrid, we achieve this with negative margin
    however in future we need better solution
      CANNOT: make wrapper <div> and put cell + fills inside. because events live within the cell
      and will run into react-native-esque problems again!
      WE REALLY just need to do trial-and-error in react-native to see what's possible
Other ways to rearrange list-item-event DOT
  (Currently we're using display:contents with order:-1)
  (FYI, react-native doesn't allow allow (flex)order to be set)
  1. Simply override whole eventContent(), while incorporating timeClass/timeClass
  2. Use flex-direction: inverse-row to reverse time/title,
      and then absolutely position color dot with well-known left offset
