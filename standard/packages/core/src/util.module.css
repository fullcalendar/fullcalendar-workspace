
:root {
  --fc-sticky-header-footer-z: 3;
  --fc-popover-z: 4;
}

.popoverZ {
  z-index: var(--fc-popover-z);
}

.borderBoxRoot,
.borderBoxRoot *,
.borderBoxRoot *:before,
.borderBoxRoot *:after {
  box-sizing: border-box;
}

.ltrRoot {
  direction: ltr;
  text-align: left;
}

.rtlRoot {
  direction: rtl;
  text-align: right;
}

/* classes attached to <body> */
.notAllowed,
.notAllowed * {
  cursor: not-allowed;
}

.noScrollbars {
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}

/* Hide scrollbar for Chrome, Safari and Opera */
.noScrollbars::-webkit-scrollbar {
  display: none;
}

.noShrink {
  flex-shrink: 0;
}

.calendarScreenRoot .safeTiles {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}

/* HACK for Safari. Can't do break-inside:avoid with flexbox items, likely b/c it's not standard:
   https://stackoverflow.com/a/60256345 */
.calendarPrintRoot.ltrRoot .safeTiles > * {
  float: left;
}

.calendarPrintRoot.rtlRoot .safeTiles > * {
  float: right;
}

.calendarPrintRoot .safeTiles::after {
  content: "";
  display: block;
  clear: both;
}

/* TODO: maybe have theme define this. might want grippy texture or hover effect */
.colResizer {
  position: absolute;
  z-index: 1;
  top: 0;
  bottom: 0;
  width: 5px;
  cursor: col-resize;
}

.ltrRoot .colResizer {
  right: -3px;
}

.rtlRoot .colResizer {
  left: -3px;
}

.cursorPointer {
  cursor: pointer;
}

.cursorResizeT {
  cursor: n-resize;
}

.cursorResizeB {
  cursor: s-resize;
}

.ltrRoot .cursorResizeS,
.rtlRoot .cursorResizeE {
  cursor: w-resize;
}

.ltrRoot .cursorResizeE,
.rtlRoot .cursorResizeS {
  cursor: e-resize;
}

.hit,
.hitX,
.hitY {
  position: absolute;
  box-sizing: content-box;
  width: 100%;
  height: 100%;
}

.hit {
  padding: 10px;
  margin: -10px;
}

.hitX {
  padding-left: 10px;
  padding-right: 10px;
  margin-left: -10px;
  margin-right: -10px;
}

.hitY {
  padding-top: 10px;
  padding-bottom: 10px;
  margin-top: -10px;
  margin-bottom: -10px;
}

/* Border Utils */
/* ------------------------------------------------------------------------------------------------- */

/* TODO: break-out to x and y. don't have "only" all */
/* TODO: instead of "border" utils, call them "borderless" to subtract? */

.borderNone {
  border: 0 !important;
}

.borderOnlyT {
  border-left: 0 !important;
  border-right: 0 !important;
  border-bottom: 0 !important;
}

.borderOnlyB {
  border-top: 0 !important;
  border-left: 0 !important;
  border-right: 0 !important;
}

.borderOnlyS,
.borderOnlyE {
  border-top: 0 !important;
  border-bottom: 0 !important;
}

.ltrRoot .borderOnlyS {
  border-right: 0 !important;
}

.rtlRoot .borderOnlyS {
  border-left: 0 !important;
}

.ltrRoot .borderOnlyE {
  border-left: 0 !important;
}

.rtlRoot .borderOnlyE {
  border-right: 0 !important;
}

/* for matching cell start-border, assumed to be 1px, which can't be guaranteed */
.ltrRoot .fakeBorderS {
  border-left: 1px solid transparent;
}

.rtlRoot .fakeBorderS {
  border-right: 1px solid transparent;
}

/* Flexbox Utils */
/* ------------------------------------------------------------------------------------------------- */

.flexRow {
  display: flex;
  flex-direction: row;
}

.flexCol {
  display: flex;
  flex-direction: column;
}

.grow {
  flex-grow: 1;
}

.liquid {
  flex-grow: 1;
  flex-basis: 0;
  min-width: 0;
  min-height: 0;
}

/* Print-Safe Utils (media:screen ONLY) */
/* ------------------------------------------------------------------------------------------------- */

.calendarScreenRoot .printRoot,
.calendarScreenRoot .printHeader {
  display: flex;
  flex-direction: column;
}

/* Table Utils */
/* ------------------------------------------------------------------------------------------------- */

.tight {
  margin: 0 !important;
  padding: 0 !important;
}

.noPadding {
  padding: 0 !important;
}

.noMargin {
  margin: 0 !important;
}

.rigid {
  flex-shrink: 0;
  white-space: nowrap;
  overflow: hidden;
}

/* Misc Utils */
/* ------------------------------------------------------------------------------------------------- */

.crop {
  overflow: hidden;
}

/*
TODO: eventually use this on daygrid/timegrid events' inner, time, and title, FOR PRINT
Needed to prevent wrapping to multiple lines, increasing height, throwing off print-positioning,
which can't rely on dynamic height detection after print-flag activated.
*/
.cropNowrap {
  white-space: nowrap !important;
  overflow: hidden !important;
}

.rel {
  position: relative;
}

.abs {
  position: absolute;
}

.fill {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.fillTop,
.fillX {
  position: absolute;
  left: 0;
  right: 0;
}

.fillY,
.fillStart {
  position: absolute;
  top: 0;
  bottom: 0;
}

.fillTop {
  top: 0;
}

.fillStart {
  left: 0;
  right: 0;
  width: 0;
}

.stickyT {
  position: sticky;
  top: 0;
}

/* Sticks to either left or right (the flex "start") depending on ltr/rtl */
.stickyS {
  position: sticky;
  left: 0;
  right: 0;
}

.tableHeaderSticky {
  position: sticky;
  top: 0;
  z-index: var(--fc-sticky-header-footer-z);
}

/* Only needed when padding/border must be separate from width/height */
.contentBox {
  box-sizing: content-box;
}

.offscreen {
  position: absolute;
  left: -10000px;
}

.justifyCenter {
  justify-content: center;
}

.justifyCenterspaceBetween {
  justify-content: space-between;
}

.justifyCenterend {
  justify-content: flex-end;
}

.alignCenter {
  align-items: center;
}

.alignStart {
  align-items: flex-start;
}

/* Footer Scrollbar */
/* ------------------------------------------------------------------------------------------------- */

.footerScrollbarSticky {
  position: sticky;
  bottom: 0;
  z-index: var(--fc-sticky-header-footer-z);
}

.footerScrollbar > * {
  margin-top: -1px;
}

.footerScrollbar > * > * {
  height: 1px;
}

/* Print-Safe Utils */
/* ------------------------------------------------------------------------------------------------- */

.calendarPrintRoot .breakInsideAvoid {
  break-inside: avoid;
}

.calendarPrintRoot .printRoot {
  display: table;
  table-layout: fixed;
  width: 100%;
  border-spacing: 0;
  border-collapse: collapse;
}

.calendarPrintRoot .printHeader {
  display: table-header-group;
  break-inside: avoid;
  background: #fff;
  z-index: 9999;
  position: relative;
}

/* HACKS */
/* ------------------------------------------------------------------------------------------------- */

.dayGridRowPrint {
  /* Print view squishes width which results in overly tall cells that can't adapt to new width */
  /* hardcode a value that looks good in portrait and landscape */
  /* In print view, the row <div> is NOT a flexbox child, so no interference with expanding algorithm */
  /*
  TODO: for measurement refactor...
    FOR NOW: override dayRowMinHeight with a pixel value (100px-ish?) if print
    LATER: have this settable via media-type-specific options
  */
  min-height: 6em;
}

.dayGridDayBody {
  /* TODO: use flexRow, or maybe remove this element */
  display: flex;
  flex-direction: column;

  /* TODO: use dayCellBottom after measurement refactor */
  margin-bottom: 1px;
}

.dayGridDayBodyTall {
  /* (tall) -- extra spacious for ALL-DAY SECTION */
  /*
  TODO: make this new setting dayRowMinHeight, always pixels
  In the theme, have view-specific setting...
    timeGrid: {
      dayRowMinHeight: 150
    }
  */
  min-height: 2em;

  /*
  TODO: fix after measurement refactor
  SOLUTION: dayCellBottom should be responsible for this space
  In theme, have view-specific setting...
    timeGrid: {
      dayCellBottomClassName: 'min-height-[1em]'
    }
  */
  margin-bottom: 1em;
}

.dayGridDayBody:only-child {
  /* (without header) */
  /*
  BUSTED. TODO: fix after measurement refactor
  SOLUTION: have the dayCellTop wrapper be responsible for this space,
  Always have this div, even if no content within it.
  Give it min-height of 2px.
  */
  margin-top: 2px;
}

/*
TODO: for measurement refactor, for DayGrid,
put the more-link in the dayCellBottom, or its own wrapper just before it.
This will allow themes to put liquid-expandable height on the event container (w/o +more link)
so the more-link can move to the bottom
*/

/* INTERNAL MARKER -- used to mark an element for internal significance */
/* ------------------------------------------------------------------------------------------------- */

.internalRoot {}

.internalTimelineSlot {}

.internalEvent {}
.internalEventMirror {}
.internalEventDraggable {}
.internalEventSelected {}
.internalEventResizable {}
.internalEventResizer {}
.internalEventResizerStart {}
.internalEventResizerEnd {}

.internalBgEvent {}

.internalMoreLink {}

.internalNavLink {}

.internalViewOuter {}

.internalPopover {}

.internalView {}
.internalViewOuter {}

.internalScroller {}
